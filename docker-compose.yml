x-common-application-variables: &common-application-variables
  DEBUG: "True"
  SECRET_KEY: "Unneeded"  # pragma: allowlist secret
  DJANGO_SETTINGS_MODULE: request_a_govuk_domain.settings
  DATABASE_URL: postgresql://govuk_domain:govuk_domain@postgres:5432/govuk_domain  # pragma: allowlist secret
  AWS_ENDPOINT_URL_S3: http://s3:9090
  CLAMD_TCP_ADDR: clamav
  S3_STORAGE_ENABLED: "True"
  ENVIRONMENT: 'local'
  AWS_ACCESS_KEY_ID: dummy-access-key-id # pragma: allowlist secret
  AWS_SECRET_ACCESS_KEY: dummy-access-key # pragma: allowlist secret
  CELERY_BROKER_URL: redis://redis:6379/0
  NOMINET_ROMSID: test_romsid
  NOMINET_SECRET: test_secret # pragma: allowlist secret
  GOOGLE_ANALYTICS_ID: GTM-TEST

x-api-base: &api-base
  platform: linux/amd64
  build:
    context: .
    args:
      POETRY_ARGS: "--no-root --no-ansi"


services:
  s3:
    image: adobe/s3mock:3.12.0
    restart: always
    environment:
      initialBuckets: registration-app-media-root-local
      debug: "true"
      retainFilesOnExit: "false"
      root: containers3root
    ports:
      - 9090:9090
    volumes:
      - ./.s3-data:/containers3root
    networks:
      - s3-net
    healthcheck:
      test: wget --quiet --output-document=/dev/null http://localhost:9090
      interval: 1s
      retries: 20

  web:
    platform: linux/amd64
    <<: *api-base
    ports:
      - "8010:8000"
    #Added the reload flag so the application will be reloaded when the source is modified.
    entrypoint: [ "/usr/local/bin/gunicorn", "request_a_govuk_domain.wsgi:application", "--bind", "0.0.0.0:8000", "--timeout", "120", "--access-logfile", "-", "--reload" ]
    environment:
      <<: *common-application-variables
    volumes:
      - .:/app
      - govuk_domain_home:/home/govuk_domain
    depends_on:
      postgres:
        condition: service_healthy
      init:
        condition: service_completed_successfully
      clamav:
        condition: service_started
      s3:
        condition: service_started
      worker:
        condition: service_started
    networks:
      - clam-net
      - s3-net

  worker:
    platform: linux/amd64
    build:
      context: .
      args:
        POETRY_ARGS: "--no-root --no-ansi"
    entrypoint: [ "/usr/local/bin/celery", "-A", "request_a_govuk_domain" ]
    command: [ "worker", "-B", "-l", "INFO" ]
    environment:
      <<: *common-application-variables
      CELERY_BEAT_SCHEDULE_FILENAME: /var/run/request_a_govuk_domain/celerybeat-schedule
      NOTIFY_EMAIL_FAILURE_RECIPIENT: prakash.jha@digital.cabinet-office.gov.uk
    volumes:
      - worker-var-run:/var/run/request_a_govuk_domain/
    depends_on:
      - redis
    networks:
      - clam-net

  postgres:
    platform: linux/amd64
    image: postgres
    ports:
      - 54321:5432
    environment:
      POSTGRES_USER: govuk_domain
      POSTGRES_PASSWORD: govuk_domain  # pragma: allowlist secret
      POSTGRES_DB: govuk_domain
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clam-net

  redis:
    image: redis
    ports:
      - "63790:6379"
    volumes:
      - redis-data:/data
    networks:
      - clam-net


  clamav:
    platform: linux/amd64
    image: clamav/clamav:latest
    restart: unless-stopped
    ports:
      - "3310:3310"
    networks:
      - clam-net

  init:
    <<: *api-base
    restart: 'no'
    environment:
      <<: *common-application-variables
    command: [ "sh", "/app/local-init.sh" ]
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      s3:
        condition: service_healthy
    networks:
      - clam-net
      - s3-net


volumes:
  postgres-data: { }
  govuk_domain_home: { }
  redis-data: { }
  worker-var-run: { }

networks:
  clam-net:
  s3-net:
