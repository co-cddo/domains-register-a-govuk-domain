from django.core.management.base import BaseCommand

from request_a_govuk_domain.request import models

REGISTRAR_NAMES = [
    "1 Click Services Limited",
    "100 Percent IT Limited",
    "1010 Media LTD",
    "123 connect",
    "20i Ltd",
    "Absolutely PC Limited",
    "Albacore Systems Ltd",
    "Al-Barq Macintosh Electronics Ltd",
    "Alchemy Systems (Western) Ltd",
    "Alpha Business Communications Limited",
    "aql Limited",
    "Aspire Technology Solutions Ltd",
    "Astutium Ltd",
    "Aubergine 262 Ltd",
    "Bamboo Data Ltd",
    "Basingstoke and Deane Borough Council",
    "BB Online UK Ltd",
    "BestHost",
    "Better Brand Agency Limited",
    "Black Nova Designs Ltd",
    "Blue Sky Hosting Ltd",
    "Bluecom Services Limited",
    "Bongo IT Ltd",
    "British Telecommunications Public Limited Company",
    "BWP Creative Limited",
    "Capita Birmingham Limited",
    "Central Digital & Data Office",
    "Claranet Ltd",
    "Cloud Next Limited",
    "Cloudscape Connect Ltd",
    "CompuWeb Communications Services Ltd",
    "Consider IT Limited",
    "Cornwall Council",
    "Craven Digital Limited",
    "CSC Corporate Domains",
    "CSD Network Services Ltd",
    "Cuttlefish Multimedia Ltd",
    "Datacenta Hosting Limited",
    "DDS Services Limited",
    "Department of Finance",
    "Doughty Software",
    "Drakonim Limited",
    "Durham Associates Ltd",
    "Durham County Council",
    "Easy Internet Solutions Ltd",
    "Easyspace Limited",
    "Echo Internet Limited",
    "Elite Limited",
    "Elynx",
    "Enix Limited",
    "Force36 Limited",
    "Formation Media Ltd",
    "Function 28 Limited",
    "Geoxphere Ltd",
    "Grade1 Internet Solutions Limited",
    "HCI Data Ltd",
    "Hertscom IT Ltd",
    "Host4u Limited",
    "Hostworld Internet Limited",
    "ICUK Computing Services Ltd",
    "iHTTP Ltd",
    "Intellectual Property Office",
    "Internet for Business Ltd",
    "JAB Networking Solutions Ltd",
    "JNR Computer Services",
    "John & Jacqueline Brown",
    "JPARC Limited",
    "JustHostMe Limited",
    "Krystal Hosting",
    "Lancaster University Network Services Limited",
    "Luminet Data Limited",
    "Midland Computers Ltd",
    "MJRCC Limited",
    "Mythic Beasts Ltd",
    "nameSpace",
    "NetBop Technologies Ltd",
    "Netcom IT Solutions Limited",
    "NetHosted Ltd",
    "Netistrar Ltd",
    "Netscalibur",
    "NetWise Training Ltd",
    "Net-Work",
    "Newcastle City Council",
    "Nexus Data Systems Ltd",
    "Northumberland County Council",
    "Nuco Technologies Ltd",
    "NYES Digital - North Yorkshire Council",
    "NYnet Ltd",
    "Office for National Statistics",
    "On Screen",
    "Openstrike",
    "Orangutan TM Ltd",
    "OWA Digital Ltd.",
    "Parish Council Website",
    "Powys County Council",
    "Pulse8design Ltd",
    "PumpkinPip Ltd",
    "reCoded Solutions Ltd",
    "Rejuven8 Ltd",
    "Room 101 Limited",
    "Safenames Ltd",
    "Salford City Council",
    "SCIS UK Limited",
    "See Green Systems Ltd",
    "Setsquare Creative Solutions Ltd",
    "SME IT Solutions Limited",
    "Somerset Council",
    "Somerset Web Services",
    "Sota Solutions Limited",
    "South Ayrshire Council",
    "Springbok Computers Ltd",
    "Squarebird LLP",
    "Stablepoint Limited",
    "Swift Internet",
    "SWSweb",
    "The Bunker Secure Hosting Ltd",
    "The Internet Business Ltd",
    "The Networking People (TNP) Limited",
    "The Positive Internet Company Ltd",
    "The Stationery Office Ltd",
    "Together Technology Ltd",
    "Total Web Solutions",
    "Toucan Internet LLP",
    "TRS Design Agency Limited",
    "Twin Dots Limited",
    "UK ICT Ltd",
    "UKCE Ltd",
    "Vantech Media",
    "Virgin Media Business Limited",
    "Vision ICT Ltd",
    "Vodafone Limited",
    "VPW Systems (UK) Ltd",
    "Wavenet Limited",
    "Web Function Limited",
    "WJP Software Limited",
    "YorkUK Hosting",
    "Zengenti Ltd",
]


class Command(BaseCommand):
    help = "Create a sample application for local testing"

    def handle(self, *args, **options):
        if not models.Registrar.objects.first():
            for name in REGISTRAR_NAMES:
                models.Registrar.objects.create(name=name)
        else:
            print("Not adding initial Registrars as the table is already populated")
