# Generated by Django 4.2.13 on 2024-08-05 10:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("request", "0012_alter_application_status"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalRegistrar",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(db_index=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical registrar",
                "verbose_name_plural": "historical registrars",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRegistrant",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                "central_government",
                                "Central government department or agency",
                            ),
                            (
                                "alb",
                                "Non-departmental body - also known as an arm's length body",
                            ),
                            ("parish_council", "Parish, town or community council"),
                            (
                                "local_authority",
                                "District, borough, city or county council",
                            ),
                            ("fire_service", "Fire service"),
                            ("combined_authority", "Combined or unitary authority"),
                            ("pcc", "Police and crime commissioner"),
                            ("joint_authority", "Joint authority"),
                            ("joint_committee", "Joint committee"),
                            (
                                "psb_group",
                                "Organisation representing a group of public sector bodies",
                            ),
                            (
                                "psb_profession",
                                "Organisation representing a profession across public sector bodies",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical registrant",
                "verbose_name_plural": "historical registrants",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalApplication",
            fields=[
                ("id", models.BigIntegerField(blank=True, db_index=True)),
                ("reference", models.CharField(db_index=True, max_length=17)),
                ("time_submitted", models.DateTimeField(blank=True, editable=False)),
                ("time_decided", models.DateTimeField(null=True)),
                ("last_updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("in_progress", "In Progress"),
                            ("ready_2i", "Ready for 2i"),
                            ("more_information", "More Information"),
                            ("with_nac", "Currently with NAC"),
                            ("new", "New"),
                            ("duplicate_application", "Duplicate application"),
                            ("failed_confirmation_email", "Failed Confirmation Email"),
                            ("failed_decision_email", "Failed Decision Email"),
                        ],
                        default="new",
                        max_length=25,
                    ),
                ),
                ("domain_name", models.CharField(max_length=253)),
                ("domain_purpose", models.CharField(blank=True, null=True)),
                (
                    "written_permission_evidence",
                    models.TextField(blank=True, max_length=255, null=True),
                ),
                (
                    "ministerial_request_evidence",
                    models.TextField(blank=True, max_length=255, null=True),
                ),
                (
                    "policy_exemption_evidence",
                    models.TextField(blank=True, max_length=255, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "registrant_org",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="request.registrant",
                    ),
                ),
                (
                    "registrant_person",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="request.registrantperson",
                    ),
                ),
                (
                    "registrar_org",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="request.registrar",
                    ),
                ),
                (
                    "registrar_person",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="request.registrarperson",
                    ),
                ),
                (
                    "registry_published_person",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="request.registrypublishedperson",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical application",
                "verbose_name_plural": "historical applications",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
